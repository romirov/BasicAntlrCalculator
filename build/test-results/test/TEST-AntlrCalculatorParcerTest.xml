<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="AntlrCalculatorParcerTest" tests="2" skipped="0" failures="0" errors="0" timestamp="2022-12-01T21:59:12" hostname="fuji" time="0.927">
  <properties/>
  <testcase name="parserTestsWithotException()" classname="AntlrCalculatorParcerTest" time="0.841"/>
  <testcase name="parserTestsWithException()" classname="AntlrCalculatorParcerTest" time="0.085"/>
  <system-out><![CDATA[2022-12-02 00:59:13,000 Test worker DEBUG Apache Log4j Core 2.19.0 initializing configuration XmlConfiguration[location=/home/hanza/IdeaProjects/BasicAntlrCalculator/build/resources/main/log4j2.xml]
2022-12-02 00:59:13,006 Test worker DEBUG Took 0.002482 seconds to load 0 plugins from package org.apache.logging.log4j.test
2022-12-02 00:59:13,007 Test worker DEBUG PluginManager 'Core' found 130 plugins
2022-12-02 00:59:13,008 Test worker DEBUG PluginManager 'Level' found 0 plugins
2022-12-02 00:59:13,013 Test worker DEBUG PluginManager 'Lookup' found 16 plugins
2022-12-02 00:59:13,014 Test worker DEBUG Building Plugin[name=filter, class=org.apache.logging.log4j.core.filter.ThresholdFilter].
2022-12-02 00:59:13,022 Test worker DEBUG PluginManager 'TypeConverter' found 26 plugins
2022-12-02 00:59:13,026 Test worker DEBUG createFilter(level="TRACE", onMatch="null", onMismatch="null")
2022-12-02 00:59:13,027 Test worker DEBUG Building Plugin[name=layout, class=org.apache.logging.log4j.core.layout.PatternLayout].
2022-12-02 00:59:13,035 Test worker DEBUG PatternLayout$Builder(pattern="%m %n", PatternSelector=null, Configuration(XMLConfigTest), Replace=null, charset="null", alwaysWriteExceptions="null", disableAnsi="null", noConsoleNoAnsi="null", header="null", footer="null")
2022-12-02 00:59:13,036 Test worker DEBUG PluginManager 'Converter' found 45 plugins
2022-12-02 00:59:13,038 Test worker DEBUG Building Plugin[name=appender, class=org.apache.logging.log4j.core.appender.ConsoleAppender].
2022-12-02 00:59:13,044 Test worker DEBUG ConsoleAppender$Builder(target="null", follow="null", direct="null", bufferedIo="null", bufferSize="null", immediateFlush="null", ignoreExceptions="null", PatternLayout(%m %n), name="STDOUT", Configuration(XMLConfigTest), Filter=null, ={})
2022-12-02 00:59:13,047 Test worker DEBUG Starting OutputStreamManager SYSTEM_OUT.false.false
2022-12-02 00:59:13,048 Test worker DEBUG Building Plugin[name=layout, class=org.apache.logging.log4j.core.layout.PatternLayout].
2022-12-02 00:59:13,049 Test worker DEBUG PatternLayout$Builder(pattern="%d %p %c{1.} [%t] %m%n", PatternSelector=null, Configuration(XMLConfigTest), Replace=null, charset="null", alwaysWriteExceptions="null", disableAnsi="null", noConsoleNoAnsi="null", header="null", footer="null")
2022-12-02 00:59:13,058 Test worker DEBUG Building Plugin[name=TimeBasedTriggeringPolicy, class=org.apache.logging.log4j.core.appender.rolling.TimeBasedTriggeringPolicy].
2022-12-02 00:59:13,061 Test worker DEBUG TimeBasedTriggeringPolicy$Builder(interval="1", modulate="null", maxRandomDelay="null")
2022-12-02 00:59:13,062 Test worker DEBUG Building Plugin[name=SizeBasedTriggeringPolicy, class=org.apache.logging.log4j.core.appender.rolling.SizeBasedTriggeringPolicy].
2022-12-02 00:59:13,063 Test worker DEBUG createPolicy(size="250 MB")
2022-12-02 00:59:13,065 Test worker DEBUG Building Plugin[name=Policies, class=org.apache.logging.log4j.core.appender.rolling.CompositeTriggeringPolicy].
2022-12-02 00:59:13,066 Test worker DEBUG createPolicy(={TimeBasedTriggeringPolicy(nextRolloverMillis=0, interval=1, modulate=false), SizeBasedTriggeringPolicy(size=262144000)})
2022-12-02 00:59:13,066 Test worker DEBUG Building Plugin[name=appender, class=org.apache.logging.log4j.core.appender.RollingFileAppender].
2022-12-02 00:59:13,068 Test worker DEBUG RollingFileAppender$Builder(fileName="logs/log4j2.log", filePattern="logs/${date:yyyy-MM}/app-%d{MM-dd-yyyy}-%i.log.gz", append="null", locking="null", Policies(CompositeTriggeringPolicy(policies=[TimeBasedTriggeringPolicy(nextRolloverMillis=0, interval=1, modulate=false), SizeBasedTriggeringPolicy(size=262144000)])), Strategy=null, advertise="null", advertiseUri="null", createOnDemand="null", filePermissions="null", fileOwner="null", fileGroup="null", bufferedIo="null", bufferSize="null", immediateFlush="null", ignoreExceptions="null", PatternLayout(%d %p %c{1.} [%t] %m%n), name="rollingFile", Configuration(XMLConfigTest), Filter=null, ={})
2022-12-02 00:59:13,074 Test worker DEBUG Returning file creation time for /home/hanza/IdeaProjects/BasicAntlrCalculator/logs/log4j2.log
2022-12-02 00:59:13,074 Test worker DEBUG Starting RollingFileManager logs/log4j2.log
2022-12-02 00:59:13,076 Test worker DEBUG PluginManager 'FileConverter' found 2 plugins
2022-12-02 00:59:13,079 Test worker DEBUG Setting prev file time to 2022-12-01T23:07:59.313+0300
2022-12-02 00:59:13,079 Test worker DEBUG Initializing triggering policy CompositeTriggeringPolicy(policies=[TimeBasedTriggeringPolicy(nextRolloverMillis=0, interval=1, modulate=false), SizeBasedTriggeringPolicy(size=262144000)])
2022-12-02 00:59:13,079 Test worker DEBUG Initializing triggering policy TimeBasedTriggeringPolicy(nextRolloverMillis=0, interval=1, modulate=false)
2022-12-02 00:59:13,080 Test worker DEBUG Initializing triggering policy SizeBasedTriggeringPolicy(size=262144000)
2022-12-02 00:59:13,080 Test worker DEBUG Building Plugin[name=appenders, class=org.apache.logging.log4j.core.config.AppendersPlugin].
2022-12-02 00:59:13,081 Test worker DEBUG createAppenders(={STDOUT, rollingFile})
2022-12-02 00:59:13,081 Test worker DEBUG Building Plugin[name=AppenderRef, class=org.apache.logging.log4j.core.config.AppenderRef].
2022-12-02 00:59:13,082 Test worker DEBUG createAppenderRef(ref="STDOUT", level="null", Filter=null)
2022-12-02 00:59:13,082 Test worker DEBUG Building Plugin[name=AppenderRef, class=org.apache.logging.log4j.core.config.AppenderRef].
2022-12-02 00:59:13,083 Test worker DEBUG createAppenderRef(ref="rollingFile", level="null", Filter=null)
2022-12-02 00:59:13,084 Test worker DEBUG Building Plugin[name=root, class=org.apache.logging.log4j.core.config.LoggerConfig$RootLogger].
2022-12-02 00:59:13,086 Test worker DEBUG LoggerConfig$RootLogger$Builder(additivity="null", level="INFO", levelAndRefs="null", includeLocation="null", ={STDOUT, rollingFile}, ={}, Configuration(XMLConfigTest), Filter=null)
2022-12-02 00:59:13,087 Test worker DEBUG Building Plugin[name=loggers, class=org.apache.logging.log4j.core.config.LoggersPlugin].
2022-12-02 00:59:13,089 Test worker DEBUG createLoggers(={root})
2022-12-02 00:59:13,089 Test worker DEBUG Configuration XmlConfiguration[location=/home/hanza/IdeaProjects/BasicAntlrCalculator/build/resources/main/log4j2.xml] initialized
2022-12-02 00:59:13,090 Test worker DEBUG Starting configuration XmlConfiguration[location=/home/hanza/IdeaProjects/BasicAntlrCalculator/build/resources/main/log4j2.xml]
2022-12-02 00:59:13,090 Test worker DEBUG Started configuration XmlConfiguration[location=/home/hanza/IdeaProjects/BasicAntlrCalculator/build/resources/main/log4j2.xml] OK.
2022-12-02 00:59:13,092 Test worker DEBUG Shutting down OutputStreamManager SYSTEM_OUT.false.false-1
2022-12-02 00:59:13,092 Test worker DEBUG OutputStream closed
2022-12-02 00:59:13,092 Test worker DEBUG Shut down OutputStreamManager SYSTEM_OUT.false.false-1, all resources released: true
2022-12-02 00:59:13,093 Test worker DEBUG Appender DefaultConsole-1 stopped with status true
2022-12-02 00:59:13,093 Test worker DEBUG Stopped org.apache.logging.log4j.core.config.DefaultConfiguration@7f0d96f2 OK
2022-12-02 00:59:13,165 Test worker DEBUG Registering MBean org.apache.logging.log4j2:type=5ffd2b27
2022-12-02 00:59:13,167 Test worker DEBUG Registering MBean org.apache.logging.log4j2:type=5ffd2b27,component=StatusLogger
2022-12-02 00:59:13,168 Test worker DEBUG Registering MBean org.apache.logging.log4j2:type=5ffd2b27,component=ContextSelector
2022-12-02 00:59:13,170 Test worker DEBUG Registering MBean org.apache.logging.log4j2:type=5ffd2b27,component=Loggers,name=
2022-12-02 00:59:13,171 Test worker DEBUG Registering MBean org.apache.logging.log4j2:type=5ffd2b27,component=Appenders,name=rollingFile
2022-12-02 00:59:13,172 Test worker DEBUG Registering MBean org.apache.logging.log4j2:type=5ffd2b27,component=Appenders,name=STDOUT
2022-12-02 00:59:13,173 Test worker DEBUG org.apache.logging.log4j.core.util.SystemClock supports precise timestamps.
2022-12-02 00:59:13,173 Test worker DEBUG Reconfiguration complete for context[name=5ffd2b27] at URI /home/hanza/IdeaProjects/BasicAntlrCalculator/build/resources/main/log4j2.xml (org.apache.logging.log4j.core.LoggerContext@235f4c10) with optional ClassLoader: null
2022-12-02 00:59:13,174 Test worker DEBUG Shutdown hook enabled. Registering a new one.
2022-12-02 00:59:13,175 Test worker DEBUG LoggerContext[name=5ffd2b27, org.apache.logging.log4j.core.LoggerContext@235f4c10] started OK.
parse tree: (calculation (expression (expression (number 2)) * (expression (number 2))) <EOF>) 
2022-12-02 00:59:13,428 Test worker DEBUG Formatting file name. useCurrentTime=false. currentFileTime=1669931953427, prevFileTime=1669842000000
2022-12-02 00:59:13,429 Test worker DEBUG Current file: logs/log4j2.log
2022-12-02 00:59:13,431 Test worker DEBUG Eligible files: {}
2022-12-02 00:59:13,431 Test worker DEBUG Formatting file name. useCurrentTime=false. currentFileTime=1669931953427, prevFileTime=1669842000000
2022-12-02 00:59:13,433 Test worker DEBUG OutputStream closed
2022-12-02 00:59:13,434 Test worker DEBUG RollingFileManager executing synchronous FileRenameAction[logs/log4j2.log to logs/2022-12/app-12-01-2022-1.log, renameEmptyFiles=false]
2022-12-02 00:59:13,435 Test worker DEBUG RollingFileManager executing async GzCompressAction[logs/2022-12/app-12-01-2022-1.log to logs/2022-12/app-12-01-2022-1.log.gz, deleteSource=true]
2022-12-02 00:59:13,436 Test worker DEBUG Now writing to logs/log4j2.log at 2022-12-02T00:59:13.436+0300
parse tree: (calculation (expression (expression (number 2)) / (expression (number 2))) <EOF>) 
parse tree: (calculation (expression (expression (number 2)) + (expression (number 2))) <EOF>) 
parse tree: (calculation (expression (expression (number 2)) - (expression (number 2))) <EOF>) 
parse tree: (calculation (expression (expression ( (expression (expression (number 2)) + (expression (number 2))) )) * (expression (number 2))) <EOF>) 
parse tree: (calculation (expression (expression ( (expression (expression (number 2)) + (expression (number 2))) )) * (expression ( (expression (expression (number 2)) / (expression (number 2))) ))) <EOF>) 
parse tree: (calculation (expression (expression ( (expression (expression ( (expression (expression (number 2)) + (expression (number 2))) )) * (expression ( (expression (expression (number 2)) / (expression (number 2))) ))) )) - (expression (number 2))) <EOF>) 
parse tree: (calculation (expression (expression ( (expression (expression (expression (number 2)) ^ (expression (number 2))) * (expression ( (expression (expression (number 2)) / (expression (number 2))) ))) )) - (expression (number 2))) <EOF>) 
Syntax error position in line 1:3 extraneous input '*' expecting {SNUMBER, '('} 
Syntax error position in line 1:10 missing ')' at '<EOF>' 
Syntax error position in line 1:2 message token recognition error at: '=' 
Syntax error position in line 1:2 message token recognition error at: '>' 
Syntax error position in line 1:3 message token recognition error at: '>' 
Syntax error position in line 1:2 message token recognition error at: '<' 
Syntax error position in line 1:6 message token recognition error at: '=' 
Syntax error position in line 1:15 extraneous input ')' expecting {<EOF>, SNUMBER, '('} 
]]></system-out>
  <system-err><![CDATA[line 1:3 extraneous input '*' expecting {SNUMBER, '('}
line 1:10 missing ')' at '<EOF>'
line 1:2 token recognition error at: '='
line 1:2 token recognition error at: '>'
line 1:3 token recognition error at: '>'
line 1:2 token recognition error at: '<'
line 1:6 token recognition error at: '='
line 1:15 extraneous input ')' expecting {<EOF>, SNUMBER, '('}
]]></system-err>
</testsuite>
